---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app.kubernetes.io/component: api
spec:
  ports:
    - port: 8900
  selector:
    app.kubernetes.io/component: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  labels:
    app.kubernetes.io/component: api
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  number: 8900
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app.kubernetes.io/component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/component: api

    spec:
      initContainers:
        - name: concat
          image: alpine:3
          command: ['/bin/sh', '-c']
          args:
            - |-
              find /fragments -type f | xargs -I{} sh -c "cat {}; echo ''" > /config/config.yaml

          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /fragments
              name: fragments

      containers:
        - name: indexify
          image: tensorlake/indexify:latest

          command: ['indexify']
          args:
            - server
            - --config-path
            - ./config/config.yaml

          env:
            - name: AWS_ENDPOINT_URL
              value: http://blob-store:9000
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: blob-store
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: blob-store
                  key: AWS_SECRET_ACCESS_KEY

          volumeMounts:
            - mountPath: /indexify/config
              name: config
              readOnly: true
            - mountPath: /data
              name: data

      volumes:
        - name: fragments
          configMap:
            name: indexify
        - name: config
          emptyDir: {}
        - name: data
          emptyDir: {}
