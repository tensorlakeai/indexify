[package]
name = "indexify"
version = "0.1.0"
edition = "2021"
authors = ["Diptanu Gon Choudhury <diptanu@tensorlake.ai>"]
build = "build.rs"
resolver = "2"

[workspace]
members = ["."] 

[workspace.dependencies]
anyerror = "*"
anyhow = { version = "1" }
async-trait = "0.1"
askama = { version = "0.12" }
axum = { version = "0.7", features = ["multipart", "macros"] }
axum-otel-metrics = "0.8"
axum-tracing-opentelemetry = "0.16"
backtrace = "0.3"
base64 = "0.21.0"
bincode = "1.3"
bollard = { version = "0.15", features = ["buildkit"] }
bytes = "1"
byteorder = "1"
clap = { version = "4", features = ["derive"] }
figment = { version = "0.10", features = ["yaml", "env"] }
flexbuffers = { version = "2.0" }
h2 = { version = "0.4.1" }
hostname = { version = "0.3" }
hyper = { version = "1", features = ["full"] }
hyper-util = { version = "0.1", features = ["service"] }
itertools = "0.12"
jsonschema = "0.17"
mime = { version = "0.3" }
mime_guess = { version = "2" }
moka = { version = "0.12", features = ["default", "future"] }
nanoid = { version = "0.4" }
openraft = {version = "0.8.8", features = ["serde"] }
opensearch = { version = "2" }
opentelemetry = { version = "0.20", features = ["rt-async-std"] }
opentelemetry_sdk = "0.21"
opentelemetry-semantic-conventions = "0.13"
opentelemetry-otlp = { version = "0.13", features = [
    "http-proto",
    "reqwest-client",
] }
opentelemetry-stdout = { version = "0.2", features = [
    "logs",
    "metrics",
    "trace",
] }
paste = { version = "1.0" }
pgvector = { version = "0.3", features = ["sqlx"] }
prost = { version = "0.12" }
prost-types = { version = "0.12" }
pyo3 = { version = "0.20.2", features = ["auto-initialize"] }
qdrant-client = "1"
rand = { version = "0.8" }
redis = { version = "0.24", features = ["async-std-rustls-comp", "default", "cluster", "cluster-async"] }
redis-test = { version = "0.3", features = ["futures"] }
regex = { version = "1" }
reqwest = { version = "0.11", features = ["json"] }
rustls = { version = "0.22" }
rustls-pemfile = { version = "2" }
serde = { version = "1", features = ["derive"] }
serde_with = {version="3.4.0"}
serde_yaml = { version = "0.9" }
serde_json = { version = "1" }
simd-json = { version = "0.13", features = ["serde_impl", "runtime-detection", "value-no-dup-keys"] }
smart-default = { version = "0.7" }
sled = { version = "0.34" }
sqlx = { version = "0.7", features = [ "runtime-tokio", "tls-native-tls", "postgres", "macros", "time", "json" ] }
strum = { version = "0.25", features = ["derive"] }
thiserror = "1"
tonic = { version = "0.10.2", features = ["prost"] }
tokio = { version = "1", features = ["full"] }
tokio-stream = {version = "0.1", features=["sync"]}
tokio-rustls = { version = "0.25" }
tower = { version = "0.4" }
tracing = { version = "0.1", features = ["log"] }
tracing-core = "0.1"
tracing-opentelemetry = { version = "0.22" }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-unwrap = {version="0.10"}
url = "2"
utoipa = { version = "4", features = ["axum_extras"] }
utoipa-swagger-ui = { version = "5", features = ["axum"] }
utoipa-rapidoc = { version = "2", features = ["axum"] }
utoipa-redoc = { version = "2", features = ["axum"] }
object_store = {version = "0.9", features = ["aws"] }
local-ip-address = { version = "0.5" }
flate2 = "1"
tar = "0.4"
walkdir = { version = "2" }

[dependencies]
anyerror = { workspace = true }
anyhow = { workspace = true }
async-trait = { workspace = true }
askama = { workspace = true }
axum = { workspace = true }
axum-otel-metrics = { workspace = true }
axum-tracing-opentelemetry = { workspace = true }
base64 = { workspace = true }
bincode = { workspace = true }
bollard = { workspace = true }
byteorder = { workspace = true }
bytes = { workspace = true }
clap = { workspace = true }
figment = { workspace = true }
flexbuffers = { workspace = true }
h2 = { workspace = true }
hostname = { workspace = true }
hyper = { workspace = true }
hyper-util = { workspace = true }
itertools = { workspace = true }
jsonschema = { workspace = true }
mime = { workspace = true }
mime_guess = { workspace = true }
moka = { workspace = true }
nanoid = { workspace = true }
openraft = { workspace = true }
opensearch = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry_sdk = { workspace = true }
opentelemetry-semantic-conventions = { workspace = true }
opentelemetry-otlp = { workspace = true }
opentelemetry-stdout = { workspace = true }
paste = { workspace = true }
pgvector = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }
pyo3 = { workspace = true }
qdrant-client = { workspace = true }
rand = { workspace = true }
redis = { workspace = true }
redis-test = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true }
rustls = { workspace = true }
rustls-pemfile = { workspace = true }
serde = { workspace = true }
serde_with = { workspace = true }
serde_yaml = { workspace = true }
serde_json = { workspace = true }
simd-json = { workspace = true }
sled = { workspace = true }
smart-default = { workspace = true }
sqlx = { workspace = true }
strum = { workspace = true }
thiserror = { workspace = true }
tonic = { workspace = true }
tokio = { workspace = true }
tokio-rustls = { workspace = true }
tokio-stream = { workspace = true }
tower = { workspace = true }
tracing = { workspace = true }
tracing-core = { workspace = true }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-unwrap = { workspace = true }
url = { workspace = true }
utoipa = { workspace = true }
utoipa-swagger-ui = { workspace = true }
utoipa-rapidoc = { workspace = true }
utoipa-redoc = { workspace = true }
object_store = { workspace = true }
local-ip-address = { workspace = true }
flate2 = { workspace = true }
tar = { workspace = true }
walkdir = { workspace = true }

[dev-dependencies]
insta = { version = "1.34.0", features = ["ron"] }
tracing-test = { version = "0.2", features = ["no-env-filter"] }

[build-dependencies]
# All features enabled
vergen = { version = "8", features = [
    "build",
    "cargo",
    "git",
    "gitcl",
    "rustc",
    "si",
] }
pyo3-build-config = "0.20"
tonic-build = { version = "0.10.2", features = ["prost"] }

[package.metadata.deb]
maintainer = "Diptanu Gon Choudhury <diptanu@tensorlake.ai>"
copyright = "2024, Diptanu Gon Choudhury <diptanu@tensorlake.ai>"
license-file = ["LICENSE", "4"]
extended-description = """\
Indexify is a reactive structured extraction engine for un-structured data.
"""
section = "utility"
priority = "optional"
assets = [
    ["target/release/indexify", "/usr/local/bin/indexify", "755"],
]
depends = "$auto"
